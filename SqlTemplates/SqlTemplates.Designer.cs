//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFrameworkCore.TemporalTables.SqlTemplates {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlTemplates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlTemplates() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EntityFrameworkCore.TemporalTables.SqlTemplates.SqlTemplates", typeof(SqlTemplates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS -- if temporal table doesn&apos;t exist
        ///(
        ///	SELECT 1
        ///	FROM   sys.tables
        ///	WHERE  object_id = OBJECT_ID(&apos;{TABLE_WITH_SCHEMA}&apos;, &apos;u&apos;) AND temporal_type = 2
        ///)
        ///BEGIN
        ///    ALTER TABLE {TABLE_WITH_SCHEMA}
        ///    ADD
        ///            SysStartTime datetime2(0) GENERATED ALWAYS AS ROW START HIDDEN
        ///                CONSTRAINT {TABLE_NAME}_DF_SysStart DEFAULT SYSUTCDATETIME()
        ///            , SysEndTime datetime2(0) GENERATED ALWAYS AS ROW END HIDDEN
        ///                CONSTRAINT {TABLE_NAME}_DF_SysEnd DEFAULT CONVE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateTemporalTable {
            get {
                return ResourceManager.GetString("CreateTemporalTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS-- if temporal table exists
        ///(
        ///	SELECT 1
        ///	FROM   sys.tables
        ///	WHERE  object_id = OBJECT_ID(&apos;{TABLE_WITH_SCHEMA}&apos;, &apos;u&apos;) AND temporal_type = 2
        ///)
        ///BEGIN
        ///    ALTER TABLE {TABLE_WITH_SCHEMA} SET (SYSTEM_VERSIONING = OFF);
        ///
        ///    /* Optionally, DROP PERIOD if you want to revert temporal table to a non-temporal */
        ///    ALTER TABLE {TABLE_WITH_SCHEMA}
        ///    DROP PERIOD FOR SYSTEM_TIME;
        ///
        ///	ALTER TABLE {TABLE_WITH_SCHEMA}
        ///    DROP COLUMN SysStartTime, SysEndTime;
        ///
        ///    DROP TABLE {TABLE_WITH_SCHEMA}His [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DropTemporalTable {
            get {
                return ResourceManager.GetString("DropTemporalTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 1
        ///FROM   sys.tables
        ///WHERE  object_id = OBJECT_ID(&apos;{TABLE_WITH_SCHEMA}&apos;, &apos;u&apos;) AND temporal_type = 2.
        /// </summary>
        internal static string IsDatabaseTableTemporal {
            get {
                return ResourceManager.GetString("IsDatabaseTableTemporal", resourceCulture);
            }
        }
    }
}
